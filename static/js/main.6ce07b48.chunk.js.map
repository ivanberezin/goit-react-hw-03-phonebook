{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["INITIAL_STATE","name","number","ContactForm","state","handleChange","type","e","contacts","props","contactInState","find","contact","toLowerCase","target","value","alert","setState","handleSubmit","preventDefault","onAddContact","this","onSubmit","onChange","className","Component","Filter","onChangeFilter","defaultProps","ContactListItem","onClickRemove","onClick","ContactList","filteredContacts","onRemove","length","map","id","App","filter","addContact","newContact","uuid","prevState","handleChangeFilter","getFilteredContacts","includes","handleRemove","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","title","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6ce07b48.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.css';\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    state = INITIAL_STATE;\r\n\r\n    handleChange = (type, e) => {\r\n        const {contacts} = this.props;\r\n        if (type==='name') {\r\n          const contactInState = contacts.find(contact => contact.name.toLowerCase() === e.target.value.toLowerCase());\r\n          if (contactInState) {\r\n            alert(`${contactInState.name} is already in contacts!`);\r\n          }\r\n        }\r\n        this.setState({[type]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n        const {contacts, onAddContact} = this.props;\r\n        const contactInState = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n        contactInState && alert(`${contactInState.name} is already in contacts!`);\r\n        if (!contactInState && name && number) {\r\n            onAddContact(name, number);\r\n            this.setState(INITIAL_STATE);\r\n            return\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h3>Name</h3>\r\n                <label><input type=\"text\" value={name} onChange={e => this.handleChange('name', e)} /></label><br/>\r\n                <h3>Number</h3>\r\n                <label><input type=\"tel\" value={number} onChange={e => this.handleChange('number', e)} /></label><br/>\r\n                <button type=\"submit\" className=\"buttonForm\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onAddContact: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Filter.css'\r\n\r\nexport default function Filter({value, onChangeFilter}) {\r\n    return (\r\n        <div className=\"Filter\">\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" value={value} onChange={e => onChangeFilter(e.target.value)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.css';\r\n\r\nconst ContactListItem = ({name, number, onClickRemove}) => {\r\n    return (\r\n        <li className=\"ContactListItem\">\r\n            <p>{name}: {number}</p>\r\n            <button type=\"button\" className=\"ContactsList-button\" onClick={onClickRemove}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst ContactList = ({filteredContacts, onRemove}) => {\r\n    return (\r\n        filteredContacts.length > 0 && (\r\n            <ul className=\"ContactsList\">\r\n                {filteredContacts.map(({id, name, number}) => (\r\n                    <ContactListItem key={id} name={name} number={number} onClickRemove={() => onRemove(id)} />\r\n                ))}\r\n            </ul>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}\r\n","import React, { Component } from 'react';\n\nimport {uuid} from 'uuidv4';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\n\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n        this.setState({\n          contacts: JSON.parse(persistedContacts),\n        })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: uuid(),\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      }\n    });\n  }\n\n  handleChangeFilter = filter => {\n    this.setState({filter});\n  }\n\n  getFilteredContacts = () => {\n    const {contacts, filter} = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  handleRemove = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({id}) => id !== contactId)\n      }\n    })\n  }\n\n  render() {\n    const {contacts, filter} = this.state;\n    return(\n      <>\n        <div className=\"Container\">\n          <section title=\"Phonebook\" className=\"Section\">\n            <h1>Phonebook</h1>\n            <ContactForm contacts={contacts} onAddContact={this.addContact}/>\n          </section>\n          <section title=\"Contacts\" className=\"Section\">\n            <h2>Contacts</h2>\n            <Filter value={filter} onChangeFilter={this.handleChangeFilter}/>\n            <ContactList filteredContacts={this.getFilteredContacts()} onRemove={this.handleRemove} />\n          </section>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}